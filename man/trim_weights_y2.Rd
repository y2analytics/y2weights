% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trim_weights_y2.R
\name{trim_weights_y2}
\alias{trim_weights_y2}
\title{Create a trimmed weights vector}
\usage{
trim_weights_y2(
  svy_design,
  limit_method = c("standard deviations", "percentile", "decimal"),
  upper_limit = 3,
  lower_limit = -3,
  strict = TRUE
)
}
\arguments{
\item{svy_design}{A complex raked survey design object (can be created using the rake_y2() function).}

\item{limit_method}{(default = 'standard deviations') The type of limits that will be used for the upper_limit/lower_limit arguments. Currently accepts 'standard deviations', 'percentile', or 'decimal'.}

\item{upper_limit}{(default = 3) Set an upper trim limit for your weights (the default of 3 SDs would trim only .3\% of the weights). If limit_method is set to 'percentile', limit will be the upper percentile at which the weight will be trimmed. If limit_method is set to 'decimal', limit will be the upper numerical limit of the weight.}

\item{lower_limit}{(default = -3) Set a lower trim limit for your weights (the default of 3 SDs would trim only .3\% of the weights). If limit_method is set to 'percentile', limit will be the lower percentile at which the weight will be trimmed. If limit_method is set to 'decimal', limit will be the lower numerical limit of the weight.}

\item{strict}{(default = TRUE) The reapportionment of the ‘trimmings’ from the weights may sometimes push other weights over the limits. If strict = TRUE the function repeats the trimming iteratively to prevent this.}
}
\value{
A vector of trimmed weights constructed using the svy_design object
}
\description{
Use trim_weights_y2() to create a vector of trimmed weights by taking the survey design output from rake_y2() and passing it to this function.
}
\examples{
municipal_data \%>\%
  define_target_y2(
    s_sex,
    c(
      '1' = .49,
      '2' = .5,
      '3' = .01
    )
  )
svy_design <- municipal_data \%>\% 
  rake_y2(
    s_sex
  )
  
# Default method (Standard deviations)
municipal_data$trimmed_weights <- trim_weights_y2(svy_design)
# OR
municipal_data \%>\% 
  dplyr::mutate(
    trimmed_weights = trim_weights_y2(
      svy_design
    )
  )
  
# Percentile method
municipal_data \%>\% 
  dplyr::mutate(
    trimmed_weights = trim_weights_y2(
      svy_design,
      limit_method = 'percentile',
      upper_limit = .975,
      lower_limit = .025
    )
  )
  
# Decimal method
municipal_data \%>\% 
  dplyr::mutate(
    trimmed_weights = trim_weights_y2(
      svy_design,
      limit_method = 'decimal',
      upper_limit = 5,
      lower_limit = 0.5
    )
  )
}
\keyword{freqs}
\keyword{parameters}
\keyword{population}
\keyword{weights}
